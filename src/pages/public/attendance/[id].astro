---
import MainLayout from "@/layouts/mainLayout/MainLayout.astro";
import Sites from "@/components/sites/Sites.astro";
import { AttendanceForm } from "@/components/attendanceForm";
import { fetchApi } from "@/utilities";
import type { Guest, Attendance } from "@/interfaces";
const imgLogo = "../../../assest/imgs/logo_conectado.png";
const imgConect = "../../../assest/imgs/conectados.png";

const endpoint = "/event"; // Assuming this is a string

const response = await fetchApi(endpoint);

const { id } = Astro.params;

const endpointCustomer = `/customer/${id}`; // Assuming this is a string

// Consulta a la API para obtener los datos del invitado
let guest = null;
try {
  guest = (await fetchApi(endpointCustomer)) as Guest;

  if (guest?.status === 404) {
    return Astro.redirect("/404");
  }
} catch (error) {
  console.error("Error al obtener datos del invitado:", error);
  return Astro.redirect("/404");
}

if (!guest) {
  return Astro.redirect("/404");
}

const endpointAttendance = `/attendance/${id}`; // Assuming this is a string
let confirm = null;

try {
  confirm = (await fetchApi(endpointAttendance)) as Attendance;
} catch (error) {
  console.error("Error al obtener datos del invitado:", error);
}
let msgButton;
msgButton = confirm?.data?.confirm_attendance
  ? "Obtener Qr"
  : "¡Reserva mi lugar!";
---

<MainLayout title="Home">
  <section class="flex flex-col items-center">
    <h3 class="sm:text-3xl text-xl text-white">
      Estás cordialmente invitado a
    </h3>
    <img class="m-3" src={imgLogo} width="250" height="250" alt="Logo" />
  </section>
  <section></section>
  <section>
    <img
      class="items-center flex sm:w-fit p-3"
      src={imgConect}
      alt="Conectados"
    />
    <p class="sm:text-xl text-2xl text-white p-8 text-center">
      Únete a nosotros en una noche diseñada para celebrar nuestra alianza,
      compartir experiencias y crear conexiones valiosas. Queremos que seas
      parte de este encuentro especial, donde celebramos nuestro compromiso
      mutuo de ofrecer el mejor servicio a las más de 1.000 familias que confían
      en Previser.
    </p>
    <div class="border-b-2 border-white w-10/12 mx-auto"></div>
    <div>
      <h1 class="text-3xl p-5 text-white text-center m-0">
        {guest?.data?.name?.toUpperCase()}
        {guest?.data?.surname?.toUpperCase()}
      </h1>
      {
        Array.isArray(response) ? (
          response.map((event) => <Sites event={event} />)
        ) : (
          <p>No events found</p>
        )
      }
    </div>
  </section>
  <section class="pb-8 mb-14">
    <div class="text-center">
      <!-- Aquí puedes incluir el formulario u otros componentes -->
      <AttendanceForm
        server:defer
        document={guest?.data?.document}
        button={msgButton}
        client:only="react"
      />
    </div>
    <div class="bg-white rounded text-center mb-3">
      <p class="text-blue-800 text-xl">
        {
          (msgButton = confirm?.data?.confirm_attendance
            ? null
            : 'Por favor, <span class="font-bold">confirma tu lugar</span>')
        }
      </p>
    </div>
    <p class="text-white text-center text-xl">
      No te pierdas la oportunidad única de <span
        >fortalecer tu presencia en el ecosistema Previser</span
      >
      <span> ¡Te esperamos con los brazos abiertos! </span>
    </p>
  </section>
</MainLayout>
