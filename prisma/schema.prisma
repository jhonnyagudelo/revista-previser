generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attendace {
  id                 Int       @id @default(autoincrement())
  customer_id        Int?
  event_id           Int?
  confirm_attendance Boolean?  @default(false)
  confirm_arrival    Boolean?  @default(false)
  confirmation_time  DateTime? @db.Timestamp(6)
  arrival_time       DateTime? @db.Timestamp(6)
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  update_at          DateTime? @default(now()) @db.Timestamp(6)
  state              Boolean?  @default(true)
  customer           customer? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  event              event?    @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([customer_id, event_id])
}

model customer {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(100)
  surname    String      @db.VarChar(100)
  document   String      @unique(map: "customer_email_key") @db.VarChar(100)
  phone      String?     @db.VarChar(15)
  created_at DateTime?   @default(now()) @db.Timestamp(6)
  update_at  DateTime?   @default(now()) @db.Timestamp(6)
  state      Boolean?    @default(true)
  attendace  attendace[]
}

model event {
  id         Int         @id @default(autoincrement())
  event_name String      @db.VarChar(100)
  date       DateTime    @db.Timestamp(6)
  location   String?     @db.VarChar(255)
  created_at DateTime?   @default(now()) @db.Timestamp(6)
  update_at  DateTime?   @default(now()) @db.Timestamp(6)
  state      Boolean?    @default(true)
  place      String?     @db.VarChar(500)
  hour       DateTime?   @db.Time(6)
  attendace  attendace[]
}

model role {
  id         Int       @id @default(autoincrement())
  nombre     String?   @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamp(6)
  update_at  DateTime? @default(now()) @db.Timestamp(6)
  state      Boolean?  @default(true)
  users      users[]
}

model users {
  id         Int       @id @default(autoincrement())
  role_id    Int
  username   String    @db.VarChar
  password   String    @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamp(6)
  update_at  DateTime? @default(now()) @db.Timestamp(6)
  state      Boolean?  @default(true)
  role       role      @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
